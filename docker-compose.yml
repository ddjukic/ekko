version: '3.8'

services:
  ekko:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # API Keys (set these in .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PODCASTINDEX_API_KEY=${PODCASTINDEX_API_KEY}
      - PODCASTINDEX_API_SECRET=${PODCASTINDEX_API_SECRET}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN}
      # Streamlit configuration
      - STREAMLIT_SERVER_PORT=8080
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      # Application settings
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
    volumes:
      # Persistent data volumes
      - ./logs:/app/logs
      - ./audio:/app/audio  
      - ./transcripts:/app/transcripts
      - ./chroma:/app/chroma
      - ./user_data.json:/app/user_data.json
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - ekko-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ekko-network

  # Optional: Transcription server
  transcriber:
    build:
      context: .
      dockerfile: Dockerfile.transcriber
    ports:
      - "8000:8000"
    environment:
      - TRANSCRIPTION_SERVER_TOKEN=${TRANSCRIPTION_SERVER_TOKEN:-chamberOfSecrets}
      - NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN}
    volumes:
      - ./audio:/app/audio
      - ./transcripts:/app/transcripts
    restart: unless-stopped
    networks:
      - ekko-network
    profiles:
      - transcriber

volumes:
  redis-data:

networks:
  ekko-network:
    driver: bridge