name: CD Pipeline - Deploy to Google Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ekko
  REGION: us-central1
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/ekko

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker
      
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE }}:${{ github.sha }} .
          docker tag ${{ env.IMAGE }}:${{ github.sha }} ${{ env.IMAGE }}:latest
      
      - name: Push to Google Container Registry
        run: |
          docker push ${{ env.IMAGE }}:${{ github.sha }}
          docker push ${{ env.IMAGE }}:latest
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --timeout 300 \
            --max-instances 10 \
            --min-instances 0 \
            --port 8080 \
            --set-env-vars="LOG_LEVEL=INFO" \
            --set-secrets="OPENAI_API_KEY=openai-api-key:latest" \
            --set-secrets="PODCASTINDEX_API_KEY=podcastindex-api-key:latest" \
            --set-secrets="PODCASTINDEX_API_SECRET=podcastindex-api-secret:latest" \
            --set-secrets="YOUTUBE_API_KEY=youtube-api-key:latest"
      
      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "Service deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
      
      - name: Smoke test
        run: |
          sleep 10
          curl -f ${{ env.SERVICE_URL }}/_stcore/health || exit 1
      
      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ env.IMAGE }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ env.SERVICE_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY